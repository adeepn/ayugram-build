name: Buildgram

on:
  workflow_dispatch:
  push:

jobs:
  build:
    permissions:
      contents: write
      packages: write
      pull-requests: read

    name: Build all
    runs-on: ubuntu-latest
    steps:
      - name: prepare packages
        run: |
          sudo apt-get update
          sudo apt-get install -y python-is-python3 python3-venv python3-pip
          python3 -m venv .venv
          source .venv/bin/activate
          pip3 install poetry

      - name: Free space on build drive
        run: |
          # Inspired by https://github.com/easimon/maximize-build-space/blob/v7/action.yml
          df -h
          sudo rm -rf /usr/local/lib/android/sdk/ndk
          sudo rm -rf /opt/hostedtoolcache/CodeQL
          sudo mkdir /mnt/cache
          sudo mkdir /mnt/output
          sudo mkdir /mnt/build
          WORKSPACE_OWNER="$(stat -c '%U:%G' "${GITHUB_WORKSPACE}")"
          # output directory is symlinked for easier access from workspace
          # but for build container it must be mounted as a volume
          sudo ln -sf /mnt/output "${GITHUB_WORKSPACE}/output"
          sudo chown -R "${WORKSPACE_OWNER}" /mnt/cache
          sudo chown -R "${WORKSPACE_OWNER}" /mnt/output
          sudo chown -R "${WORKSPACE_OWNER}" /mnt/build
          df -h

      - name: Checkout the latest code
        uses: actions/checkout@v4
        with:
          repository: AyuGram/AyuGramDesktop
          submodules: true
          path: /mnt/build/tdesktop
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: prepare build
        run: |
          source .venv/bin/activate
          cd /mnt/build
          ./tdesktop/Telegram/build/prepare/linux.sh

      - name: build tg
        run: |
          source .venv/bin/activate
          cd /mnt/build
          cd tdesktop
          docker run --rm -it \
           -v "$PWD:/usr/src/tdesktop" \
           tdesktop:centos_env \
           /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
           -D TDESKTOP_API_ID=2040 \
           -D TDESKTOP_API_HASH=b18441a1ff607e10a989891a5462e627

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: os_build
          path: /mnt/build/tdesktop/out/*
          compression-level: 9
          if-no-files-found: error
